{"version":3,"sources":["webpack:///component---src-templates-tags-js-05fc64fd397db1d841c8.js","webpack:///./src/templates/Tags.js"],"names":["webpackJsonp","655","module","exports","__webpack_require__","_interopRequireDefault","obj","__esModule","default","_react","_react2","_propTypes","_propTypes2","Tags","_ref","pageContext","data","tag","_data$allMarkdownRema","allMarkdownRemark","edges","totalCount","tagHeader","createElement","map","_ref2","node","_node$frontmatter","frontmatter","path","title","key","Link","to","propTypes","shape","string","isRequired","number","arrayOf"],"mappings":"AAAAA,cAAc,iBAERC,IACA,SAAUC,EAAQC,EAASC,GAEhC,YAYA,SAASC,GAAuBC,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,QAASF,GAVvFH,EAAQI,YAAa,CCPtB,IAAAE,GAAAL,EAAA,GDWKM,EAAUL,EAAuBI,GCVtCE,EAAAP,EAAA,GDcKQ,EAAcP,EAAuBM,GCTpCE,EAAO,SAAAC,GAA2B,GAAxBC,GAAwBD,EAAxBC,YAAaC,EAAWF,EAAXE,KACnBC,EAAQF,EAARE,IAD8BC,EAERF,EAAKG,kBAA3BC,EAF8BF,EAE9BE,MAAOC,EAFuBH,EAEvBG,WACTC,EAAeD,EAAf,SAAgD,IAAfA,EAAmB,GAAK,KAAzD,iBAA6EJ,EAA7E,GAEN,OACEP,GAAAF,QAAAe,cAAA,WACEb,EAAAF,QAAAe,cAAA,UAAKD,GACLZ,EAAAF,QAAAe,cAAA,UACGH,EAAMI,IAAI,SAAAC,GAAc,GAAXC,GAAWD,EAAXC,KAAWC,EACCD,EAAKE,YAArBC,EADeF,EACfE,KAAMC,EADSH,EACTG,KACd,OACEpB,GAAAF,QAAAe,cAAA,MAAIQ,IAAKF,GACPnB,EAAAF,QAAAe,cAACS,MAAKC,GAAIJ,GAAOC,OASzBpB,EAAAF,QAAAe,cAACS,MAAKC,GAAG,SAAT,aAKNpB,GAAKqB,WACHnB,YAAaH,EAAAJ,QAAU2B,OACrBlB,IAAKL,EAAAJ,QAAU4B,OAAOC,aAExBrB,KAAMJ,EAAAJ,QAAU2B,OACdhB,kBAAmBP,EAAAJ,QAAU2B,OAC3Bd,WAAYT,EAAAJ,QAAU8B,OAAOD,WAC7BjB,MAAOR,EAAAJ,QAAU+B,QACf3B,EAAAJ,QAAU2B,OACRT,KAAMd,EAAAJ,QAAU2B,OACdP,YAAahB,EAAAJ,QAAU2B,OACrBN,KAAMjB,EAAAJ,QAAU4B,OAAOC,WACvBP,MAAOlB,EAAAJ,QAAU4B,OAAOC,iBAG3BA,iBDuCVlC,EAAQK,QCjCMK,EDuDdX,EAAOC,QAAUA,EAAiB","file":"component---src-templates-tags-js-05fc64fd397db1d841c8.js","sourcesContent":["webpackJsonp([50739212244294],{\n\n/***/ 655:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\texports.__esModule = true;\n\t\n\tvar _react = __webpack_require__(1);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _propTypes = __webpack_require__(2);\n\t\n\tvar _propTypes2 = _interopRequireDefault(_propTypes);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t// Components\n\t// import { Link, graphql } from \"gatsby\";\n\t\n\tvar Tags = function Tags(_ref) {\n\t  var pageContext = _ref.pageContext,\n\t      data = _ref.data;\n\t  var tag = pageContext.tag;\n\t  var _data$allMarkdownRema = data.allMarkdownRemark,\n\t      edges = _data$allMarkdownRema.edges,\n\t      totalCount = _data$allMarkdownRema.totalCount;\n\t\n\t  var tagHeader = totalCount + \" post\" + (totalCount === 1 ? \"\" : \"s\") + \" tagged with \\\"\" + tag + \"\\\"\";\n\t\n\t  return _react2.default.createElement(\n\t    \"div\",\n\t    null,\n\t    _react2.default.createElement(\n\t      \"h1\",\n\t      null,\n\t      tagHeader\n\t    ),\n\t    _react2.default.createElement(\n\t      \"ul\",\n\t      null,\n\t      edges.map(function (_ref2) {\n\t        var node = _ref2.node;\n\t        var _node$frontmatter = node.frontmatter,\n\t            path = _node$frontmatter.path,\n\t            title = _node$frontmatter.title;\n\t\n\t        return _react2.default.createElement(\n\t          \"li\",\n\t          { key: path },\n\t          _react2.default.createElement(\n\t            Link,\n\t            { to: path },\n\t            title\n\t          )\n\t        );\n\t      })\n\t    ),\n\t    _react2.default.createElement(\n\t      Link,\n\t      { to: \"/tags\" },\n\t      \"All tags\"\n\t    )\n\t  );\n\t};\n\t\n\tTags.propTypes = {\n\t  pageContext: _propTypes2.default.shape({\n\t    tag: _propTypes2.default.string.isRequired\n\t  }),\n\t  data: _propTypes2.default.shape({\n\t    allMarkdownRemark: _propTypes2.default.shape({\n\t      totalCount: _propTypes2.default.number.isRequired,\n\t      edges: _propTypes2.default.arrayOf(_propTypes2.default.shape({\n\t        node: _propTypes2.default.shape({\n\t          frontmatter: _propTypes2.default.shape({\n\t            path: _propTypes2.default.string.isRequired,\n\t            title: _propTypes2.default.string.isRequired\n\t          })\n\t        })\n\t      }).isRequired)\n\t    })\n\t  })\n\t};\n\t\n\texports.default = Tags;\n\t\n\t// export const pageQuery = graphql`\n\t//   query($tag: String) {\n\t//     allMarkdownRemark(\n\t//       limit: 2000\n\t//       sort: { fields: [frontmatter___date], order: DESC }\n\t//       filter: { frontmatter: { tags: { in: [$tag] } } }\n\t//     ) {\n\t//       totalCount\n\t//       edges {\n\t//         node {\n\t//           frontmatter {\n\t//             title\n\t//             path\n\t//           }\n\t//         }\n\t//       }\n\t//     }\n\t//   }\n\t// `;\n\t\n\tmodule.exports = exports[\"default\"];\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// component---src-templates-tags-js-05fc64fd397db1d841c8.js","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\n// Components\n// import { Link, graphql } from \"gatsby\";\n\nconst Tags = ({ pageContext, data }) => {\n  const { tag } = pageContext;\n  const { edges, totalCount } = data.allMarkdownRemark;\n  const tagHeader = `${totalCount} post${totalCount === 1 ? \"\" : \"s\"} tagged with \"${tag}\"`;\n\n  return (\n    <div>\n      <h1>{tagHeader}</h1>\n      <ul>\n        {edges.map(({ node }) => {\n          const { path, title } = node.frontmatter;\n          return (\n            <li key={path}>\n              <Link to={path}>{title}</Link>\n            </li>\n          );\n        })}\n      </ul>\n      {/*\n              This links to a page that does not yet exist.\n              We'll come back to it!\n            */}\n      <Link to=\"/tags\">All tags</Link>\n    </div>\n  );\n};\n\nTags.propTypes = {\n  pageContext: PropTypes.shape({\n    tag: PropTypes.string.isRequired\n  }),\n  data: PropTypes.shape({\n    allMarkdownRemark: PropTypes.shape({\n      totalCount: PropTypes.number.isRequired,\n      edges: PropTypes.arrayOf(\n        PropTypes.shape({\n          node: PropTypes.shape({\n            frontmatter: PropTypes.shape({\n              path: PropTypes.string.isRequired,\n              title: PropTypes.string.isRequired\n            })\n          })\n        }).isRequired\n      )\n    })\n  })\n};\n\nexport default Tags;\n\n// export const pageQuery = graphql`\n//   query($tag: String) {\n//     allMarkdownRemark(\n//       limit: 2000\n//       sort: { fields: [frontmatter___date], order: DESC }\n//       filter: { frontmatter: { tags: { in: [$tag] } } }\n//     ) {\n//       totalCount\n//       edges {\n//         node {\n//           frontmatter {\n//             title\n//             path\n//           }\n//         }\n//       }\n//     }\n//   }\n// `;\n\n\n\n// WEBPACK FOOTER //\n// ./src/templates/Tags.js"],"sourceRoot":""}